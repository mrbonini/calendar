{"version":3,"sources":["store/getStore.js","pages/Calendar/slice/constants.js","store/factory.js","pages/Calendar/slice/reducer.js","reducers/index.js","components/Button.jsx","components/Counter.jsx","components/Readme.jsx","pages/App.js","components/Modal.js","pages/Calendar/style.js","pages/Calendar/dateConstants.js","components/Row.js","components/InputFormItem.js","components/Paper.js","components/SelectFormItem.js","pages/Calendar/components/AddOrEditReminder.js","pages/Calendar/components/ViewReminders.js","pages/Calendar/slice/actions.js","pages/Calendar/slice/selectors.js","pages/Calendar/Calendar.js","routes/index.js","Main.js","reportWebVitals.js","index.js"],"names":["initialState","middleware","thunk","composedEnhancers","compose","applyMiddleware","BASE_SLICE_PATH","generalControl","store","payload","_","mergeWith","objValue","srcValue","isArray","defaultView","isLoading","hasError","error","undefined","selectedDate","defaultData","weather","reminders","createSliceReducer","view","data","constantsBasePath","constants","CONTROL_VIEW","CONTROL_DATA","state","action","produce","draft","type","reducers","calendar","combineReducers","StyledButton","styled","button","props","color","padding","disabled","Button","onClick","children","style","margin","Counter","limit","React","useState","count","setCount","isLimitReached","className","Readme","md","setMd","useEffect","fetch","mode","then","response","text","allowDangerousHtml","to","App","ModalBody","div","open","ModalContent","contentStyle","Object","entries","map","entry","toString","replaceAll","ModalCloseButton","Modal","handleClose","icon","faWindowClose","size","CalendarHeaderTitle","p","CalendarHeaderContainer","CalendarBodyContainer","DayContainer","selected","weekEnd","CalendarDate","span","CalendarWeather","RemindersContainer","Reminder","months","weekDaysName","StyledRow","direction","justify","alignItems","alignSelf","alignSelft","Row","ItemContainer","noMargin","InputFormItem","label","inputType","onChange","value","maxLength","StyledPaper","Paper","SelectFormItem","selectStyle","marginTop","AddOrEditReminder","selectedDay","valuesToEdit","setSelectedReminder","selectedYear","selectedMonth","addReminderAction","cities","selectedCity","dispatch","useDispatch","reminderToAddTitle","setReminderToAddTitle","reminderToAddTime","setReminderToAddTime","reminderToAddDescription","setReminderToAddDescription","reminderToAddCity","setReminderToAddCity","reminderDay","setReminderDay","close","useCallback","handleReminderToEditDay","evt","target","dayjs","daysInMonth","handleReminderToAdd","length","handleReminderToAddTime","handleReminderToAddDescription","handleReminderToAddCity","saveReminder","newReminder","title","time","description","city","newRemindersArr","reminder","idx","position","sort","a","b","oldDayRemindersArr","filter","newDayRemindersArr","cancel","find","id","name","ReminderLine","outlined","ViewRemindersContent","edit","ViewReminders","setAddNewReminder","deleteReminder","selectedReminder","width","format","background","minHeight","maxHeight","overflowY","cursor","getResource","process","REACT_APP_API_KEY","tempScale","Axios","get","controlView","controlData","createSliceBasicActions","selectDefault","reducer","selectCalendarReminders","createSelector","selectWeatherData","selectView","loadCities","cloneDeep","citiesJson","Calendar","Routes","path","component","today","setSelectedDay","indexOf","month","setSelectedMonth","year","setSelectedYear","addNewReminder","dayToRenderCalendar","setDayToRenderCalendar","selectedCountry","setSelectedCountry","setSelectedCity","selectedTemperature","setSelectedTemperature","useSelector","selectors","countries","useMemo","actions","loadedCities","countriesArr","forEach","includes","country","push","filteredCities","citiesArr","monthDays","numberOfDays","Array","fill","monthDaysToSkip","monthFirstWeekDay","date","day","monthDaysToComplete","yearsOptions","years","i","checkWeekEnd","handleSelectYear","handleSelectMonth","handleSelectCountry","handleSelectCity","handleSelectTemperature","rem","status","main","message","opacity","height","faSpinner","spin","marginLeft","weekDay","daysToSkip","lastMonth","lastMonthDay","dateToCheck","monthDay","temp","faCloudSun","faSun","faSnowflake","faCloudRain","remainingReminders","dayToComplete","exact","withRouter","renderRoutes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","createStore","document","getElementById"],"mappings":"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","file":"static/js/main.9f8c6038.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === \"development\") {\n  const devToolsExtension = window.devToolsExtension;\n\n  if (typeof devToolsExtension === \"function\") {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\n\nexport default function getStore(reducer){\n  const store = createStore(reducer, initialState, composedEnhancers)\n  return store;\n}","export const BASE_SLICE_PATH = 'App/Calendar';","import produce from \"immer\";\nimport _ from \"lodash\";\n\nfunction generalControl(store, payload) {\n    return _.mergeWith(store, payload, (objValue, srcValue) => {\n        if (_.isArray(objValue)) {\n            return srcValue;\n        }\n    });\n}\n\nexport function createSliceReducer(\n    view = {},\n    data = {},\n    constantsBasePath = ''\n) {\n    if (!constantsBasePath) return;\n\n    const initialState = { view, data };\n\n    const constants = {\n        CONTROL_VIEW: `${constantsBasePath}/CONTROL_VIEW`,\n        CONTROL_DATA: `${constantsBasePath}/CONTROL_DATA`\n    }\n\n    return (state = initialState, action) => produce(state, draft => {\n        switch(action.type) {\n            case constants.CONTROL_VIEW: {\n                const { payload } = action;\n                generalControl(draft, { view: payload });\n                break;\n            }\n            case constants.CONTROL_DATA: {\n                const { payload } = action;\n                generalControl(draft, { data: payload });\n                break;\n            }\n        }\n    });\n}\n\nexport function createSliceBasicActions(constantsBasePath = '') {\n    if (!constantsBasePath) return;\n\n    const constants = {\n        CONTROL_VIEW: `${constantsBasePath}/CONTROL_VIEW`,\n        CONTROL_DATA: `${constantsBasePath}/CONTROL_DATA`\n    }\n\n    return {\n        controlView: (payload) => ({\n            type: constants.CONTROL_VIEW,\n            payload\n        }),\n        controlData: (payload) => ({\n            type: constants.CONTROL_DATA,\n            payload\n        })\n    }\n}","import { BASE_SLICE_PATH } from \"./constants\";\nimport { createSliceReducer } from \"../../../store/factory\";\n\nconst defaultView = {\n    isLoading: false,\n    hasError: false,\n    error: undefined,\n    selectedDate: null\n};\n\nconst defaultData = {\n    weather: {},\n    reminders: {}\n};\n\nexport const initialState = {\n    view: defaultView,\n    data: defaultData\n};\n\nexport default createSliceReducer(defaultView, defaultData, BASE_SLICE_PATH);","import { combineReducers} from 'redux';\nimport calendar from '../pages/Calendar/slice/reducer';\n\nconst reducers = {\n    calendar\n};\n\nexport default combineReducers(reducers);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  margin: 1em;\n  padding: ${props => props.color === 'primary' ? '0.5em 3em' \n    : props.color === 'secondary' \n    ? '0.5em 1.5em' : \n    props.padding ? props.padding : ''\n  };\n  background: ${props => props.disabled ? 'grey' : \n    props.color === 'primary' ? '#3074B5' \n    : props.color === 'secondary' ? '#ca0707' : ''\n  };\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n  color: white;\n  font-weight: bold;\n  font-size: 1em;\n  border-radius: 20px;\n  border: 0;\n`\nfunction Button(props) {\n  const { onClick, children, disabled, color } = props;\n\n  return <StyledButton color={color} style={{margin: '1em'}} disabled={disabled} onClick={onClick}>{children}</StyledButton>;\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\nfunction Counter({ limit }) {\n  const [count, setCount] = React.useState(0);\n  const isLimitReached = limit ? count === limit : false;\n\n  return (\n    <div className=\"counter\">\n      <h3>Counter: {count}</h3>\n      <Button\n        onClick={() => {\n          if (isLimitReached) return;\n          setCount(count + 1);\n        }}\n      >\n        Increment\n      </Button>\n      <Button\n        onClick={() => {\n          setCount(count - 1);\n        }}\n      >\n        Decrement\n      </Button>\n      {isLimitReached && <span>You reached the limit!</span>}\n    </div>\n  );\n}\n\nCounter.propTypes = {\n  limit: PropTypes.number\n};\n\nexport default Counter;\n","import React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Counter from \"./Counter\";\nimport { Link } from \"react-router-dom\"; \n\nconst README_PATH =\n  \"https://raw.githubusercontent.com/Jobsity/ReactChallenge/main/README.md\";\n\nfunction Readme() {\n  const [md, setMd] = useState(null);\n\n  useEffect(() => {\n    fetch(README_PATH, { mode: \"cors\" })\n      .then((response) => response.text())\n      .then((response) => {\n        setMd(`${response}\n        \n## About Unit Tests:\nThe component below has a suite of tests to that could serve as guidance to unit test the calendar functionality, tests are located at \\`src/components/Counter.test.jsx\\`\n        \n`);\n      });\n  }, []);\n\n  return (\n    <div className=\"readme\">\n      <ReactMarkdown allowDangerousHtml children={md} />\n      {md && (\n        <>\n          <Counter limit={3}/>\n          <h2>Use our existing route to create you calendar!</h2>\n          <Link to='/calendar'>Go to Calendar page</Link>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Readme;\n","import Readme from \"../components/Readme\";\n\nfunction App() {\n  return (\n    <div>\n      <Readme />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons'\n\nconst ModalBody = styled.div`\n    display: ${props => props.open ? 'flex' : 'none'};\n    background: rgba(1, 1, 1, 0.75);\n`\n\nconst ModalContent = styled.div`\n    width: auto;\n    max-width: 47%;\n    max-height: 61%;\n    min-width: 30%;\n    min-height: 50%;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    background: ghostwhite;\n    padding: 4em;\n    justify-content: center;\n    position: relative;\n    border-radius: 10px;\n    ${props => props.contentStyle ? Object.entries(props.contentStyle).map(entry => entry[0] + ':' + entry[1]).toString().replaceAll(\",\", \";\") : ''}\n`\n\nconst ModalCloseButton = styled.button`\n    position: absolute;\n    top: 0;\n    right: 0;\n    background: transparent;\n    border: 0;\n    cursor: pointer\n`\n\nexport default function Modal(props) {\n    const { children, open, handleClose, contentStyle } = props;\n\n    return (\n        <ModalBody className='modal' open={open}>\n            <ModalContent contentStyle={contentStyle} className='modal-content'>\n                {\n                    handleClose ?\n                    <ModalCloseButton onClick={handleClose}> \n                        <FontAwesomeIcon icon={faWindowClose} size='3x' color='#3074B5'/>\n                    </ModalCloseButton>\n                    : null\n                }\n                {children}\n            </ModalContent>\n        </ModalBody>\n    )\n}","import styled, { keyframes } from \"styled-components\"\n\nexport const CalendarHeaderTitle = styled.p`\n    display: inline-block;\n    margin: 0;\n    width: 14%;\n    text-align: center;\n    margin-left: 1px;\n    margin-right: 1px;\n    color: #FFFFFF;\n    font-size: 1.5em\n`\n\nexport const CalendarHeaderContainer = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    background: #3074B5;\n    margin-left: 1px;\n    margin-right: 3px\n`\n\nexport const CalendarBodyContainer = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    flex-wrap: wrap\n`\n\nexport const DayContainer = styled.div`\n    border: 1px solid #9D9D9D;\n    height: 100px;\n    width: 14%;\n    margin: 1px;\n    cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n    opacity: ${props => props.selected ? '0.5' : '1'};\n    background: ${props => props.weekEnd ? '#F2F2F2' : '#FFFFFF'};\n    position: relative;\n    padding: 1.5em 0.25em 0.25em 0.25em\n`\n\nexport const CalendarDate = styled.span`\n    position: absolute;\n    top: 5%;\n    right: 5%;\n    color: ${props => props.disabled ? '#A6A6A6' : props.weekEnd ? '#3074B5' : 'black'};\n    font-weight: bold;\n    margin: 0\n`\n\nexport const CalendarWeather = styled.span`\n    position: absolute;\n    top: 5%;\n    left: 5%;\n    margin: 0\n`\nexport const RemindersContainer = styled.div`\n    word-break: break-all;\n    margin-top: 0\n`\n\nexport const Reminder = styled.p`\n    margin-top: 0\n` ","export const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n];\n\nexport const weekDaysName = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n];","import React from 'react';\nimport styled from 'styled-components';\n\nexport const StyledRow = styled.div`\n    display: flex;\n    flex-direction: ${props => props.direction ? props.direction : 'row'};\n    justify-content: ${props => props.justify ? props.justify : 'flex-start'};\n    align-items: ${props => props.alignItems ? props.alignItems : 'flex-start'};\n    align-self: ${props => props.alignSelf ? props.alignSelft : 'null'};\n    margin: 0.5em 0;\n    ${props => props.style ? Object.entries(props.style).map(entry => entry[0] + ':' + entry[1]).toString().replaceAll(\",\", \";\") : ''}\n`\n\nexport default function Row(props) {\n    const {\n        children, direction, justify, alignItems, alignSelf, style, className\n    } = props;\n\n    return(\n        <StyledRow className={className} direction={direction} justify={justify} alignItems={alignItems} alignSelf={alignSelf} style={style}>\n            {children}\n        </StyledRow>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport Row from './Row';\n\nconst ItemContainer = styled.div`\n    margin-top: ${props => props.noMargin ? 0 : '1rem'}\n`\nexport default function InputFormItem(props) {\n    const { \n        label, inputType, onChange, value, maxLength, \n        direction, justify, alignItems, alignSelf, style \n    } = props;\n\n    return (\n        <Row direction={direction} justify={justify} alignItems={alignItems} alignSelf={alignSelf} style={style}>\n            <ItemContainer>\n                <label>{label}:</label>\n            </ItemContainer>\n            <ItemContainer noMargin>\n                <input value={value} maxLength={maxLength} type={inputType} onChange={onChange} />\n            </ItemContainer>\n        </Row>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledPaper = styled.div`\n    border: 1px solid lightgrey;\n    padding: 1em;\n    border-radius: 10px;\n    box-shadow: ${props => props.color ? `4px 4px ${props.color}` : '4px 4px #888888'};\n    ${props => props.style ? Object.entries(props.style).map(entry => entry[0] + ':' + entry[1]).toString().replaceAll(\",\", \";\") : ''}\n`\n\n// entry[0] + ':' + entry[1]\nexport default function Paper(props) {\n    const {\n        children, color, style, onClick\n    } = props;\n\n    return (\n        <StyledPaper color={color} style={style} onClick={onClick}>\n            {children}\n        </StyledPaper>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport Row from './Row';\n\nconst ItemContainer = styled.div`\n    margin-top: ${props => props.noMargin ? 0 : '1rem'}\n`\n\nexport default function SelectFormItem(props) {\n    const {\n        children, onChange, value, label, direction, justify, alignItems, alignSelf, style, disabled, noMargin, selectStyle\n    } = props;\n    return (\n        <Row direction={direction} justify={justify} alignItems={alignItems} alignSelf={alignSelf} style={style}>\n            {   label && \n                <label style={{marginTop: 0}}>\n                    {label}\n                </label>\n            }\n            <ItemContainer noMargin={noMargin}>\n                <select onChange={onChange} value={value} disabled={disabled} style={selectStyle}>\n                    {children}\n                </select>\n            </ItemContainer>\n        </Row>\n    )\n}","import dayjs from 'dayjs';\nimport React, { useState, useCallback } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '../../../components/Button';\nimport InputFormItem from '../../../components/InputFormItem';\nimport Paper from '../../../components/Paper';\nimport Row from '../../../components/Row';\nimport SelectFormItem from '../../../components/SelectFormItem';\n\nexport default function AddOrEditReminder(props) {\n    const { \n        reminders, selectedDay, handleClose, valuesToEdit, setSelectedReminder, \n        selectedYear, selectedMonth, addReminderAction, cities, selectedCity\n    } = props;\n    \n    const dispatch = useDispatch()\n    const [reminderToAddTitle, setReminderToAddTitle]             = useState('');\n    const [reminderToAddTime, setReminderToAddTime]               = useState('');\n    const [reminderToAddDescription, setReminderToAddDescription] = useState('');\n    const [reminderToAddCity, setReminderToAddCity]                = useState('');\n    const [reminderDay, setReminderDay]                           = useState(1);\n\n    const close = useCallback(() => {\n        setReminderToAddTitle('');\n        setReminderToAddTime('');\n        setReminderToAddDescription('');\n        setReminderToAddCity('');\n        handleClose()\n    }, []);\n\n    const handleReminderToEditDay = useCallback((evt) => {\n        if( evt.target.value <= 0 || dayjs(`${selectedMonth}-1-${selectedYear}`).daysInMonth() < evt.target.value ) return;\n        setReminderDay(evt.target.value)\n    }, [selectedMonth, selectedYear]);\n\n    const handleReminderToAdd = useCallback((evt) => {\n        if( evt.target.value.length > 30) {\n            return;\n        }\n        setReminderToAddTitle(evt.target.value)\n    },[]);\n    \n    const handleReminderToAddTime = useCallback((evt) => {\n        setReminderToAddTime(evt.target.value)\n    }, []);\n    \n    const handleReminderToAddDescription = useCallback((evt) => {\n        setReminderToAddDescription(evt.target.value);\n    }, []);\n\n    const handleReminderToAddCity = useCallback((evt) => {\n        setReminderToAddCity(evt.target.value)\n    }, [])\n    \n    const saveReminder = useCallback(() => {\n        const newReminder = {\n            title: reminderToAddTitle,\n            time: reminderToAddTime,\n            description: reminderToAddDescription,\n            city: reminderToAddCity\n        };\n\n        if( valuesToEdit && +selectedDay === +reminderDay ) {\n            const newRemindersArr = reminders[selectedYear][selectedMonth][selectedDay].map((reminder, idx) => \n                valuesToEdit.position === idx ? newReminder : reminder\n            ).sort((a,b) => {\n                if( a.time < b.time ) return -1;\n                if( b.time < a.time) return 1;\n                return 0;\n            })\n            ;\n\n            dispatch(addReminderAction({ reminders: {\n                ...reminders,\n                [selectedYear]: {\n                    ...reminders[selectedYear],\n                    [selectedMonth]: {\n                        ...reminders[selectedYear][selectedMonth],\n                        [selectedDay]: newRemindersArr\n                    }\n                }\n            }}))\n\n            return close();\n        } else if ( valuesToEdit && +selectedDay !== +reminderDay ) {\n            const oldDayRemindersArr = reminders[selectedYear][selectedMonth][selectedDay].filter((reminder, idx) => \n                idx !== +valuesToEdit.position\n            ).sort((a,b) => {\n                if( a.time < b.time ) return -1;\n                if( b.time < a.time) return 1;\n                return 0;\n            });\n\n            const newDayRemindersArr = reminders[selectedYear]?.[selectedMonth]?.[reminderDay] \n                ? [...reminders[selectedYear][selectedMonth][reminderDay], newReminder]\n                : [newReminder];\n            \n            dispatch(addReminderAction({ reminders: {\n                ...reminders,\n                [selectedYear]: {\n                    ...reminders[selectedYear],\n                    [selectedMonth]: {\n                        ...reminders[selectedYear][selectedMonth],\n                        [selectedDay]: oldDayRemindersArr,\n                        [reminderDay]: newDayRemindersArr.sort((a,b) => {\n                            if( a.time < b.time ) return -1;\n                            if( b.time < a.time) return 1;\n                            return 0;\n                        })\n                    }\n                }\n            }}));\n\n            return close();\n        }\n        \n        if( reminders?.[selectedYear]?.[selectedMonth]?.[selectedDay] ) {\n            const newRemindersArr = [...reminders[selectedYear][selectedMonth][selectedDay], newReminder].sort((a,b) => {\n                if( a.time < b.time ) return -1;\n                if( b.time < a.time) return 1;\n                return 0;\n            });\n\n            dispatch(addReminderAction({reminders: {\n                ...reminders,\n                [selectedYear]: {\n                    ...reminders[selectedYear],\n                    [selectedMonth]: {\n                        ...reminders[selectedYear][selectedMonth],\n                        [selectedDay]: newRemindersArr\n                    }\n                }\n            }}));\n\n            return close();\n        } else if (!reminders?.[selectedYear]){\n            dispatch(addReminderAction({reminders: {\n                ...reminders,\n                [selectedYear]: {\n                    [selectedMonth]: {\n                        [selectedDay]: [newReminder]\n                    }\n                }\n            }}));\n\n            return close();\n        } else if (!reminders?.[selectedYear]?.[selectedMonth]) {\n            dispatch(addReminderAction({reminders: {\n                ...reminders,\n                [selectedYear]: {\n                    ...reminders[selectedYear],\n                    [selectedMonth]: {\n                        [selectedDay]: [newReminder]\n                    }\n                }\n            }}));\n\n            return close();\n        } else {\n            dispatch(addReminderAction({reminders: {\n                ...reminders,\n                [selectedYear]: {\n                    ...reminders[selectedYear],\n                    [selectedMonth]: {\n                        ...reminders[selectedYear][selectedMonth],\n                        [selectedDay]: [newReminder]\n                    }\n                }\n            }}));\n            \n            return close();\n        }\n    }, [\n        reminderToAddTitle, reminderToAddTime, reminderToAddDescription, reminderToAddCity,\n        selectedDay, reminders, valuesToEdit, reminderDay\n    ]);\n\n    const cancel = useCallback(() => {\n        if( valuesToEdit ) {\n            setSelectedReminder();\n            setReminderToAddTitle('');\n            setReminderToAddTime('');\n            setReminderToAddDescription('');\n            return setReminderToAddCity('')\n        };\n        close();\n    });\n\n    useEffect(() => {\n        if( valuesToEdit ) {\n            setReminderToAddTitle(valuesToEdit.data.title)\n            setReminderToAddTime(valuesToEdit.data.time)\n            setReminderToAddDescription(valuesToEdit.data.description)\n            setReminderToAddCity(selectedCity || valuesToEdit.data.city)\n            setReminderDay(selectedDay)\n        }\n        if ( !valuesToEdit && selectedCity && cities.length ) {\n            setReminderToAddCity(cities.find(city => +city.id === +selectedCity)?.name);\n        }\n    }, [valuesToEdit, selectedCity, cities]);\n\n    return (\n        <Row direction='column' justify='space-between' alignItems='center'>\n            <h2 style={{margin: '1em'}}>{valuesToEdit ? 'Edit Reminder' : 'Add Reminder'}</h2>\n            <Paper>\n                {\n                    cities.length ?\n                    <SelectFormItem label='City:' \n                        value={reminderToAddCity} \n                        onChange={handleReminderToAddCity} \n                        direction='column'\n                        noMargin\n                        style={{marginTop: '1em'}}\n                    >\n                        <option disabled value='' />\n                        {\n                            cities.map(city => <option key={city.id} value={city.name}>{city.name}</option>)\n                        }\n                    </SelectFormItem>\n                    : null\n                }\n                {\n                    valuesToEdit \n                        ? <InputFormItem label='Reminder day' \n                            inputType='number' \n                            value={reminderDay} \n                            onChange={handleReminderToEditDay}\n                            direction='column'\n                        />\n                        : null\n                }\n                <InputFormItem label='Reminder title' \n                    inputType='text' \n                    value={reminderToAddTitle} \n                    onChange={handleReminderToAdd} \n                    direction='column'\n                />\n                <InputFormItem label='Reminder description' \n                    inputType='text' \n                    value={reminderToAddDescription} \n                    onChange={handleReminderToAddDescription} \n                    direction='column'\n                />\n                <InputFormItem label='Time' \n                    inputType='time' \n                    value={reminderToAddTime} \n                    onChange={handleReminderToAddTime} \n                    direction='column'\n                />\n            </Paper>\n            <Row direction='row' justify='space-between' alignItems='center'>\n                <Button color='primary' disabled={!reminderToAddTitle || !reminderToAddTime} onClick={saveReminder}>\n                    {valuesToEdit ? 'Edit' : 'Add'}\n                </Button>\n                <Button color='secondary' onClick={cancel}>\n                    Cancel\n                </Button>\n            </Row>\n        </Row>\n    )\n}","import React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../../../components/Button';\nimport Paper from '../../../components/Paper';\nimport Row from '../../../components/Row';\nimport AddOrEditReminder from './AddOrEditReminder';\nimport dayjs from 'dayjs';\n\nconst ReminderLine = styled.p`\n    margin-top: ${props => props.outlined ? 0 : '1em'};\n    border-bottom: ${props => props.outlined ? '1px solid #D1D1A4' : 0};\n    font-weight: ${props => props.outlined ? 'bold' : '100'}\n`\n\nconst ViewRemindersContent = styled.div`\n    display: flex; \n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap; \n    overflow-y: auto;\n    flex-direction: ${props => props.edit ? 'column' : 'row'};\n`\n\nexport default function ViewReminders(props) {\n    const { \n        reminders, setAddNewReminder, selectedDay, handleClose, selectedYear, \n        selectedMonth, addReminderAction, cities, selectedCity, deleteReminder\n    } = props;\n\n    const [selectedReminder, setSelectedReminder] = useState(null);\n\n    return (\n        <>\n            <ViewRemindersContent edit={selectedReminder ? true : false}>\n                {\n                    selectedReminder ? null :\n                    <>\n                        <Row justify='center' style={{width: '100%', 'marginBottom': '2em'}}>\n                            <h2>\n                                {`Reminders ${dayjs(`${selectedMonth}-${selectedDay}-${selectedYear}`).format('DD/MMM/YYYY')}`}\n                            </h2>\n                        </Row>\n                    </>\n                }\n                {\n                    !selectedReminder ?\n                    reminders[selectedYear][selectedMonth][selectedDay].map((reminder, idx) => \n                        <Row direction='column' justify='center' alignItems='space-evenly' \n                            key={`reminder-card-${selectedDay}-${idx}`} \n                        >\n                            <Paper \n                                onClick={() => setSelectedReminder({data: reminder, position: idx})}\n                                style={{\n                                    background: '#FEF5BB',\n                                    margin: '0.5em 1em',\n                                    width: '350px',\n                                    minHeight: '300px',\n                                    maxHeight: '300px',\n                                    overflowY: 'auto',\n                                    cursor: 'pointer'\n                                }}\n                                color='#DADB97'\n                            >\n                                <ReminderLine outlined >{`${reminder.time} - ${reminder.title}`}</ReminderLine>\n                                <ReminderLine outlined>{reminder.city}</ReminderLine>\n                                <ReminderLine>{reminder.description}</ReminderLine>\n                            </Paper>\n                            <Button color='secondary' onClick={() => deleteReminder(idx)}>Delete</Button>\n                        </Row>\n                    )\n                    : \n                    <AddOrEditReminder\n                        cities={cities}\n                        reminders={reminders}\n                        selectedDay={selectedDay}\n                        handleClose={handleClose}\n                        valuesToEdit={selectedReminder}\n                        setSelectedReminder={setSelectedReminder}\n                        selectedMonth={selectedMonth}\n                        selectedYear={selectedYear}\n                        addReminderAction={addReminderAction}\n                        selectedCity={selectedCity}\n                    />\n                }\n            </ViewRemindersContent>\n            <div>\n                {\n                    selectedReminder ? null :\n                    <Button color='primary' onClick={() => setAddNewReminder(selectedDay)}>Add new reminder</Button>\n                }\n            </div>\n        </>\n    )\n}","import { BASE_SLICE_PATH } from \"./constants\";\nimport Axios from 'axios';\nimport { createSliceBasicActions } from \"../../../store/factory\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst API_PATH = 'https://api.openweathermap.org/data/2.5/weather';\n\nconst getResource = async (city, tempScale) => \n    Axios.get(`${API_PATH}?id=${city}&appid=${'f9e9df8221ece19ba572d145e5175be0'}&units=${tempScale}`);\n\nconst { controlView, controlData } = createSliceBasicActions(BASE_SLICE_PATH)\n\nexport { controlView, controlData };\n\nexport const getWeatherData = (city, tempScale) => async dispatch => {\n    try {\n        dispatch(controlView({ isLoading: true }));\n\n        const { data, status } = await getResource(city, tempScale);\n        if ( status === 200 ) {\n            dispatch(controlData({ weather: {...data.weather[0], ...data.main} }));\n            dispatch(controlView({ isLoading: false }));\n        };\n    } catch (err) {\n        dispatch(controlView({\n            isLoading: false,\n            hasError: true, \n            error: err.message || 'It wasnt possible to load the weather data. Please try again later'\n        }))\n    }\n};","import { createSelector } from 'reselect';\nimport reducer from './reducer';\n\nconst selectDefault = (state) => state.calendar || reducer.initialState;\n\nexport const selectCalendarReminders = createSelector(\n    [selectDefault],\n    (state) => state.data.reminders\n);\n\nexport const selectWeatherData = createSelector(\n    [selectDefault],\n    (state) => state.data.weather\n);\n\nexport const selectView = createSelector(\n    [selectDefault],\n    (state) => state.view\n);","import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport Modal from '../../components/Modal';\nimport { \n  CalendarBodyContainer, CalendarDate, CalendarHeaderContainer, CalendarHeaderTitle, \n  CalendarWeather, \n  DayContainer, Reminder, RemindersContainer \n} from './style';\nimport { weekDaysName, months } from './dateConstants';\nimport AddOrEditReminder from './components/AddOrEditReminder';\nimport ViewReminders from './components/ViewReminders';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudSun, faSun, faSnowflake, faCloudRain, faSpinner } from '@fortawesome/free-solid-svg-icons'\n\n\nimport dayjs from 'dayjs';\nimport * as actions from './slice/actions';\nimport * as selectors from './slice/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { cloneDeep } from 'lodash';\nimport citiesJson from '../../assets/city.list.min.json';\nimport Row from '../../components/Row';\nimport SelectFormItem from '../../components/SelectFormItem';\n\nconst loadCities = () => cloneDeep(citiesJson);\n\nfunction Calendar(props) {\n  // your calendar implementation Goes here!\n  // Be creative \n  const dispatch = useDispatch();\n  const today = dayjs();\n  const [selectedDay, setSelectedDay]                           = useState(null);\n  const [selectedMonth, setSelectedMonth]                       = useState(months.indexOf(months[dayjs().month()])+1);\n  const [selectedYear, setSelectedYear]                         = useState(dayjs().year());\n  const [addNewReminder, setAddNewReminder]                     = useState(null);\n  const [dayToRenderCalendar, setDayToRenderCalendar]           = useState(dayjs(`${selectedMonth}-2-${selectedYear}`));\n  const [selectedCountry, setSelectedCountry]                   = useState('');\n  const [selectedCity, setSelectedCity]                         = useState('');\n  const [selectedTemperature, setSelectedTemperature]           = useState('metric');\n\n  const weather = useSelector(selectors.selectWeatherData);\n  const reminders = useSelector(selectors.selectCalendarReminders);\n  const view = useSelector(selectors.selectView);\n\n  const countries = useMemo(() => {\n    setSelectedCity('')\n    dispatch(actions.controlView({ isLoading: true }));\n    const loadedCities = loadCities();\n    const countriesArr = [];\n    loadedCities.forEach(city => countriesArr.includes(city.country) ? null : countriesArr.push(city.country));\n    dispatch(actions.controlView({ isLoading: false }));\n    return countriesArr.sort();\n  }, []);\n\n  const filteredCities = useMemo(() => {\n    dispatch(actions.controlView({ isLoading: true }));\n    const loadedCities = loadCities();\n    if( selectedCountry ) {\n      const citiesArr = loadedCities.filter(city => city.country === selectedCountry)\n        .sort((a, b) => {\n          if( a.name < b.name ) return -1;\n          if( b.name < a.name) return 1;\n          return 0;\n        });\n      dispatch(actions.controlView({ isLoading: false }));\n      return citiesArr;\n    };\n    dispatch(actions.controlView({ isLoading: false }));\n    return [];\n  }, [countries, selectedCountry]);\n  \n  const monthDays = useMemo(() => {\n    const numberOfDays = dayjs(dayToRenderCalendar).daysInMonth();\n    return new Array(numberOfDays).fill(null);\n  }, [dayToRenderCalendar]);\n  \n  const monthDaysToSkip = useMemo(() => {\n    const monthFirstWeekDay = dayjs(dayToRenderCalendar).date(1).day();\n    \n    return new Array(monthFirstWeekDay).fill(null);\n  }, [dayToRenderCalendar]);\n  \n\n  const monthDaysToComplete = useMemo(() => {\n    const monthFirstWeekDay = dayjs(dayToRenderCalendar).date(1).day();\n    if( monthFirstWeekDay === 1 && monthDays?.length === 28) return [];\n    if( monthFirstWeekDay > 5 ) return new Array(42 - monthDays.length - monthDaysToSkip.length).fill(null)\n    \n    return new Array(35 - monthDays.length - monthDaysToSkip.length).fill(null)\n  }, [monthDaysToSkip, dayToRenderCalendar, monthDays]);\n\n  const yearsOptions = useMemo(() => {\n    const years = [];\n    for(let i = 0; i < 10; i++) {\n      years.push(dayjs().year() + i)\n    }\n    return years;\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setSelectedDay(null);\n    setAddNewReminder(null);\n  }, []);\n\n  const checkWeekEnd = useCallback((date) => {\n    return dayjs(date).day() === 0 || dayjs(date).day() === 6 ? true : false;\n  },[]);\n\n  const handleSelectYear = useCallback((evt) => {\n    setSelectedYear(evt.target.value)\n  }, []);\n\n  const handleSelectMonth = useCallback((evt) => {\n    setSelectedMonth(evt.target.value)\n  }, []);\n\n  const handleSelectCountry = useCallback((evt) => {\n    if( evt.target.value !== selectedCountry ) {\n      setSelectedCity('');\n    };\n    setSelectedCountry(evt.target.value);\n  }, []);\n\n  const handleSelectCity = useCallback((evt) => {\n    setSelectedCity(evt.target.value);\n  }, []);\n\n  const handleSelectTemperature = useCallback(evt => {\n    setSelectedTemperature(evt.target.value);\n  },[]);\n\n  const deleteReminder = useCallback((idx) => {\n    const newRemindersArr = reminders[selectedYear][selectedMonth][selectedDay].filter(( rem,i ) => i !== idx );\n    \n    dispatch(actions.controlData({\n      reminders: {\n          ...reminders,\n          [selectedYear]: {\n              ...reminders[selectedYear],\n              [selectedMonth]: {\n                  ...reminders[selectedYear][selectedMonth],\n                  [selectedDay]: newRemindersArr\n              }\n          }\n        }\n      }));\n  }, [reminders, selectedYear, selectedMonth, selectedDay]);\n\n\n\n  useEffect(() => {\n    if( dayToRenderCalendar !== dayjs(`${selectedMonth}-2-${selectedYear}`) ){\n      setDayToRenderCalendar(dayjs(`${selectedMonth}-2-${selectedYear}`))\n    };\n  }, [selectedMonth, selectedYear]);\n\n  useEffect(() => {\n    if( selectedCity ) {\n      dispatch(actions.getWeatherData(selectedCity, selectedTemperature));\n    }\n  }, [selectedCity, selectedTemperature]);\n\n  return (\n    <div className=\"container\">\n      <Modal open={view.isLoading} contentStyle={{\n          background: '#010101',\n          opacity: 0.7,\n          'max-height': '100%', \n          'max-width': '100%', \n          width: '100%', \n          height: '100%'\n        }}\n      >\n        <FontAwesomeIcon icon={faSpinner} size='5x' spin={true} />\n      </Modal>\n      <Modal open={selectedDay ? true : false} handleClose={handleClose}>\n        {\n          reminders?.[selectedYear]?.[selectedMonth]?.[selectedDay]?.length && !addNewReminder \n          ? <ViewReminders \n            cities={filteredCities}\n            selectedDay={selectedDay}\n            selectedMonth={selectedMonth}\n            selectedYear={selectedYear}\n            setAddNewReminder={setAddNewReminder} \n            reminders={reminders}\n            handleClose={handleClose}\n            selectedMonth={selectedMonth}\n            selectedYear={selectedYear}\n            addReminderAction={actions.controlData}\n            selectedCity={selectedCity}\n            deleteReminder={deleteReminder}\n          />\n          : <AddOrEditReminder\n              cities={filteredCities}\n              reminders={reminders}\n              selectedDay={selectedDay}\n              handleClose={handleClose}\n              selectedMonth={selectedMonth}\n              selectedYear={selectedYear}\n              addReminderAction={actions.controlData}\n              selectedCity={selectedCity}\n            />\n        }\n      </Modal>\n      <Row alignItems='center' justify='space-between' >\n        <SelectFormItem label='Contry:' \n          onChange={handleSelectCountry} \n          value={selectedCountry} \n          noMargin selectStyle={{marginLeft: '0.5em'}}\n          alignItems='center'\n        >\n          {\n            countries?.length && countries.map(country => <option key={country} value={country}>{country}</option>)\n          }\n        </SelectFormItem>\n        <SelectFormItem label='City:' \n          onChange={handleSelectCity} \n          value={selectedCity} \n          disabled={!selectedCountry} \n          noMargin\n          selectStyle={{marginLeft: '0.5em'}}\n          alignItems='center'\n        >\n          <option disabled value=''></option>\n          {\n            filteredCities?.length && filteredCities.map(city => <option key={city.id} value={city.id}>{city.name}</option>)\n          }\n        </SelectFormItem>\n        <SelectFormItem onChange={handleSelectTemperature} \n          label='Temp Scale:' \n          value={selectedTemperature} \n          disabled={!selectedCity}\n          noMargin\n          selectStyle={{marginLeft: '0.5em'}}\n          alignItems='center'\n        >\n          <option value='imperial'>Fahrenheint</option>\n          <option value='metric'>Celcius</option>\n        </SelectFormItem>\n      </Row>\n      <Row alignItems='center' justify='space-between'>\n        <SelectFormItem \n          label='Month:' onChange={handleSelectMonth} \n          value={selectedMonth} noMargin alignItems='center' \n          selectStyle={{marginLeft: '0.5em'}}\n        >\n            { months.map((month, idx) => <option key={month} value={idx+1}>{month}</option>) }\n        </SelectFormItem>\n        <SelectFormItem label='Year:' onChange={handleSelectYear} \n          value={selectedYear} noMargin alignItems='center' \n          selectStyle={{marginLeft: '0.5em'}}\n        >\n            { yearsOptions.length && yearsOptions.map(year => <option key={year} value={year}>{year}</option>) }\n        </SelectFormItem>\n      </Row>\n      <div className='calendar-container'>\n        <CalendarHeaderContainer className='calendar-header'>\n          {\n            weekDaysName.map(weekDay => <CalendarHeaderTitle key={weekDay}>{weekDay}</CalendarHeaderTitle>)\n          }\n        </CalendarHeaderContainer>\n        <CalendarBodyContainer className='calendar-body'>\n          {\n            monthDaysToSkip.map((daysToSkip, idx) => {\n              const lastMonth = dayjs(dayToRenderCalendar).month() === 0 ? 12 : dayjs(dayToRenderCalendar).month();\n              const year = lastMonth === 12 ? selectedYear - 1 : selectedYear;\n              const lastMonthDay = dayjs(`${lastMonth}-1-${year}`).daysInMonth();\n              const dateToCheck = dayjs(`${lastMonth}-${lastMonthDay + idx + 1 - monthDaysToSkip.length}-${year}`);\n              \n              return (\n                <DayContainer disabled weekEnd={checkWeekEnd(dateToCheck)} key={`skip-${idx}`} key={`start-complete-${idx}`}>\n                  <CalendarDate disabled weekEnd={checkWeekEnd(dateToCheck)}>\n                    {lastMonthDay + idx + 1 - monthDaysToSkip.length}\n                  </CalendarDate>\n                </DayContainer>\n              )\n            })\n          }\n          {\n            monthDays.map((monthDay, idx) => {\n              const dateToCheck = dayjs(`${dayjs(dayToRenderCalendar).month() + 1}-${idx+1}-${selectedYear}`);\n              \n              return (\n                <DayContainer \n                  key={`month-days-${idx+1}`} \n                  onClick={() => setSelectedDay(idx+1)}\n                  selected={selectedDay === idx+1}\n                  weekEnd={checkWeekEnd(dateToCheck)}\n                >\n                  {\n                    selectedCity && weather?.temp && idx+1 === today.date() && +selectedMonth === (today.month() + 1) ?\n                    <CalendarWeather>\n                      <FontAwesomeIcon icon={\n                          weather.main === 'Clouds' ? faCloudSun\n                          : weather.main === 'Clear' ? faSun \n                          : weather.main === 'Snow' ? faSnowflake\n                          : weather.main === 'Rain' ? faCloudRain\n                          : faCloudSun\n                        }\n                      />\n                      <span style={{marginLeft: '0.5em'}}>{`${weather.temp}º ${selectedTemperature === 'metric' ? 'C' : 'F'}`}</span>\n                    </CalendarWeather>\n                    : null\n\n                  }\n                  <CalendarDate weekEnd={checkWeekEnd(dateToCheck)}>\n                    {idx+ 1}\n                  </CalendarDate>\n                  <RemindersContainer>\n                    {\n                      reminders?.[selectedYear]?.[selectedMonth]?.[idx+1] \n                        ? reminders?.[selectedYear]?.[selectedMonth]?.[idx+1].map((reminder, i) => {\n                          const remainingReminders = reminders?.[selectedYear]?.[selectedMonth]?.[idx+1].length - 1;\n\n                          return i < 1 ?\n                            <Reminder key={`reminder-${idx+1}-${i}`}>{`${reminder.time} - ${reminder.title}`}</Reminder>\n                            : i === 1 \n                            ? <Reminder key={`reminder-${idx+1}-${i}`}>\n                              {`+${remainingReminders} ${remainingReminders === 1 ? 'lembrete' : 'lembretes'}...`}\n                            </Reminder> : null\n                        })\n                        : null\n                    }\n                  </RemindersContainer>\n                </DayContainer>\n              )\n            }\n            )\n          }\n          {\n            monthDaysToComplete?.length \n              ? monthDaysToComplete.map((dayToComplete, idx) => {\n                const dateToCheck = selectedMonth === 'December'\n                  ? dayjs(`${dayjs.month(dayToRenderCalendar) + 1}-${idx+1}-${selectedYear + 1}`)\n                  : dayjs(`${dayjs(dayToRenderCalendar).month() + 2}-${idx+1}-${selectedYear}`);\n                \n                return (\n                  <DayContainer disabled weekEnd={checkWeekEnd(dateToCheck)} key={`complete-${idx}`}>\n                    <CalendarDate disabled weekEnd={checkWeekEnd(dateToCheck)}> {idx + 1} </CalendarDate>\n                  </DayContainer>\n                )})\n              : null\n          }\n        </CalendarBodyContainer>\n      </div>\n    </div>\n  )\n}\n\nexport default Calendar;","import App from '../pages/App';\nimport Calendar from '../pages/Calendar/Calendar';\n\nconst Routes = [\n  {\n    path: '/',\n    component: Calendar,\n    exact: true\n  },\n  {\n    path: '/challenge-specifications',\n    component: App,\n    exact: true\n  }\n];\n\nexport default Routes;\n","import React from 'react';\nimport { renderRoutes } from 'react-router-config';\nimport { withRouter } from 'react-router-dom';\nimport Routes from './routes';\n\nfunction Main() {\n\treturn (\n\t  <div className=\"main\">\n\t    {renderRoutes(Routes)}\n\t  </div>\n\t);\n}\n\nexport default withRouter(Main);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport getStore from \"./store/getStore\";\nimport reducers from './reducers';\nimport Main from './Main';\nimport reportWebVitals from \"./reportWebVitals\";\n\n\n// import main sass file\nimport \"./sass/app.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxProvider store={getStore(reducers)}>\n\t    <BrowserRouter>\n\t      <Main />\n\t    </BrowserRouter>\n    </ReduxProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}